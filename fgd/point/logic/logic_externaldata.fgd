@PointClass appliesto(MBase) 
	base(BaseEntityPoint)
	iconsprite("editor/logic_externaldata.vmt") 
= logic_externaldata : "Saves and reads keyvalue data from %mapname%_externaldata.txt. " +
	"Useful for when you want to read and write data across multiple playthroughs."
	[
	Target(string) : "Block" : "!self" : "The key whose subkeys should be read from/written to. Using '!self' just uses this entity's name as the block name."
	
	SaveEachChange(boolean) : "Save after each change" : 1 : "Saves each change without having to use the 'Save' input." 
	ReloadBeforeEachAction(boolean) : "Reload file before each action" : 0 : "Reloads the file before each change this entity makes. " +
		"This is mostly useful when there is a possibility that the file could change by other means which could be overwritten, " +
		"like another logic_externaldata somewhere."
	
	Mapname(string) : "Map Name" : : "logic_externaldata normally uses ''%mapname%_externaldata.txt'', " +
		"but you could override the map name here to create/access external data intended for other maps. " +
		"You could also just use this to write to additional external data files whether they're intended for another map or not."
	
	// Inputs
	input WriteKeyValue(string) : "Writes the specified keyvalue. If the keyvalue already exists, it will be overwritten. " +
		"If not, it will be created. Format is '<key> <value>', like AddOutput. (Spaces after the first will still be incorporated into the value)"
	input RemoveKeyValue(string) : "Removes the specified key."
	input ReadKey(string) : "Reads the specified key, firing OutValue with its value."
	input SetBlock(string) : "Sets the block of keyvalues the logic_externaldata reads from. Using !activator or !caller uses their respective entity names."
	input Save(void) : "Saves to %mapname%_externaldata.txt."
	input Reload(void) : "Reloads %mapname%_externaldata.txt."
	
	// Outputs
	output OutValue(string) : "Fires each time a key is read from. Passes the value." 
	]
