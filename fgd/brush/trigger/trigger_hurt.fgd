
@SolidClass base(Trigger, Targetname, MasterEnt) 
	line(255 255 255, targetname, filtername) = trigger_hurt: "A trigger volume that damages entities that touch it."
	[
	damage(integer) : "Damage" : 100000 : "The amount of damage done to entities that touch this trigger. " +
		"The damage is done every half-second. See also 'Damage Model' for extra details on how damage can be dealt."
	damagecap(integer) : "Damage Cap" : 20 : "Maximum damage dealt per second. " +
		"This field is only used if you select the Doubling w/Forgiveness damage model, via the spawnflag."

	damagetype[engine](integer) : "Damage Type" : 0
	damagetype(choices) : "Damage Type" : 0 =
		[
		0: "GENERIC"
		1: "CRUSH"
		2: "BULLET"
		4: "SLASH"
		8: "BURN"
		16: "FREEZE"
		32: "FALL"
		64: "BLAST"
		128: "CLUB"
		256: "SHOCK"
		512: "SONIC"
		1024: "ENERGYBEAM"
		16384: "DROWN"
		32768: "PARALYSE"
		65536: "NERVEGAS"
		131072: "POISON"
		262144: "RADIATION"
		524288: "DROWNRECOVER"
		1048576: "CHEMICAL"
		2097152: "SLOWBURN"
		4194304: "SLOWFREEZE"
		]

	damagemodel[engine](boolean) : "Damage Model" : 0
	damagemodel(choices) : "Damage Model" : 0 : "How damage is dealt. Normal always does the specified amount of damage each half second. Doubling starts with the specified amount and doubles it each time it hurts the toucher. Forgiveness means that if the toucher gets out of the trigger the damage will reset to the specified value. Good for making triggers that are deadly over time without having to cause massive damage on each touch." =
		[
		0: "Normal"
		1: "Doubling w/forgiveness"
		]
		
	nodmgforce(boolean) : "Zero Damage Force" : 0 : "Should the damaged entity receive no physics force from this trigger."

	// Inputs
	input SetDamage(float) : "Set a new amount of damage for this trigger."

	// Outputs
	output OnHurt(void) : "Fired whenever this trigger hurts something other than a player."
	output OnHurtPlayer(void) : "Fired whenever this trigger hurts a player."
	]
