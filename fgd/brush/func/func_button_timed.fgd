@SolidClass base(BaseEntityVisBrush) 
	appliesto(L4D, L4D2)
	line(0 255 0, targetname, glow)
= func_button_timed: "An entity that takes time to use."
	[
	use_time(integer) : "Use Time" : 5
	use_string(string) : "Use String" : "Using...."
	glow(target_destination) : "Glow Entity" : : "The name of an entity that will get the +use glow for this button."
	auto_disable(boolean) : "Auto-Disable On Time Up" : 1 : "When the use timer is up, disable the button. (Can be enabled with an input)"

	spawnflags(flags)  =
		[
		2048: "Starts locked" : 0
		]

	locked_sound[engine](integer) : "Locked Sound" : 0
	locked_sound(choices) : "Locked Sound" : 0 : "Sound played when the player tries to use the button, " +
		"and fails because it's locked. These are sounds in the Buttons.snd* category." =
		[
		0: "None (Silent)"
		1: "Buttons.snd1: Big zap & Warmup"
		2: "Buttons.snd2: Access Denied"
		3: "Buttons.snd3: Access Granted"
		4: "Buttons.snd4: Quick Combolock"
		5: "Buttons.snd5: Power Deadbolt 1"
		6: "Buttons.snd6: Power Deadbolt 2"
		7: "Buttons.snd7: Plunger"
		8: "Buttons.snd8: Small zap"
		9: "Buttons.snd9: Keycard Sound"
		10: "Buttons.snd10: Buzz"
		11: "Buttons.snd11: Buzz Off"
		12: "Buttons.snd12: Latch locked"
		13: "Buttons.snd13: Latch Unlocked"
		14: "Buttons.snd14: Lightswitch"
		15: "Buttons.snd15: Small bleek"
		16: "Buttons.snd16: Small deny"
		17: "Buttons.snd17: Small doop"
		18: "Buttons.snd18: Small tech deny"
		19: "Buttons.snd19: Click and combine screen fuzz"
		20: "Buttons.snd20: Roomy beep"
		21: "Buttons.snd21: Lever or Wheel: turn + move sqeek"
		22: "Buttons.snd22: Lever or Wheel: latch + release gas"
		23: "Buttons.snd23: Lever or Wheel: ratchet + sqeek"
		24: "Buttons.snd24: Lever or Wheel: large ratchet"
		25: "Buttons.snd25: Lever or Wheel: clanky + gas release"
		26: "Buttons.snd26: Lever or Wheel: latch + large metal thud"
		27: "Buttons.snd27: Lever or Wheel: smaller ratchet"
		28: "Buttons.snd28: Lever or Wheel: smaller lever move"
		31: "Buttons.snd31: Shock buzz"
		32: "Buttons.snd32: Clickbeep"
		33: "Buttons.snd33: Tech blip"
		34: "Buttons.snd34: Clickbeepbeep open"
		35: "Buttons.snd35: Small high blip"
		36: "Buttons.snd36: Small tech fuzz blip"
		37: "Buttons.snd37: Small click bleep (change to lightswitch)"
		40: "Buttons.snd40: Combine door lock - locked"
		41: "Buttons.snd41: Combine blip growl"
		42: "Buttons.snd42: Combine squick growl"
		43: "Buttons.snd43: Combine whine purr"
		44: "Buttons.snd44: Combine click talk"
		45: "Buttons.snd45: Combine click growl fizz"
		46: "Buttons.snd46: Combine click fizz (deny)"
		47: "Buttons.snd47: Combine click talker"
		]

	use_sub_string(string) : "Use Sub-String"

	// Inputs
	input Lock(void) : "Lock the button, preventing it from functioning and playing a locked sound."
	input Unlock(void) : "Unlock the button, allowing it to function."
	input Enable(void) : "Enable the button, so it glows and can be used."
	input Disable(void) : "Disable the button, so it can't be used and doesn't glow."

	// Outputs
	output OnPressed(void) : "Fired when the button is pressed."
	output OnUnPressed(void) : "Fired when the button is unpressed."
	output OnTimeUp(void) : "Fired when the button has been held more than the required amount of time."
	output OnUseLocked(void) : "Fired when the button is used while locked."

	@resources
		[
		func func_button_timed // The locked sound is handled specially.
		]
	]
