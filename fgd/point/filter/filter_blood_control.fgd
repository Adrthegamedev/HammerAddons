@FilterClass base(BaseRedirectFilter) 
	appliesto(MBase)
	autovis(Logic, Filters)
	iconsprite("editor/filter_blood_control.vmt")
= filter_blood_control : "A filter that controls the blood an entity emits. Must be used as a damage filter to work properly."
	[
	BloodDisabled(boolean) : "Blood Disabled" : 0 : "Sets whether blood shouldn't be produced by damage. Overrides the secondary filter, if any."

	damagefilter(filterclass) : "Secondary Filter" : "" : "An optional secondary filter that can be used for either whose damage could produce blood or as a real damage filter for whether any damage should be taken at all."
	SecondaryFilterMode(boolean) : "Secondary filter is damage filter" : 0 : "Sets whether the secondary filter should be treated as a redirected damage filter (must pass to take actual damage) instead of just permitting blood."

	input SetField(target_destination) : "Sets the secondary filter."
	
	input DisableBlood(void) : "Disables blood."
	input EnableBlood(void) : "Enables blood if it was previously disabled."
	]
