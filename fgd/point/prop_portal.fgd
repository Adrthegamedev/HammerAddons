
@PointClass base(Targetname, Angles, PortalBase) 
	appliesto(P1, P2) 
	studio("models/portals/portal1.mdl") 
	studio("models/editor/prop_portal.mdl") 
	bbox(-32, -16, -64, 32, 16, 64) = prop_portal: "A portal|||A portal."
	[
	activated[!P2](choices) : "Start Activated" : "1" : "An inactive portal will not be drawn and will not teleport entites" =
		[
		0: "Inactive"
		1: "Active"
		]

	portaltwo[!P2](choices) : "Portal Number" : "0" : "A portal has to logically be either portal 1 or portal 2" =
		[
		0: "Portal 1"
		1: "Portal 2"
		]

	linkagegroupid(integer) : "Portal pair ID that it belongs to" : 0
	linkagegroupid[P2](integer) : "Portal Group" : 0 : "Portal pair ID that it belongs to, 0=SP, 1=ATLAS, 2=P-Body"
	skin[P2](choices) : "Hammer Skin" : "1" : "Which portal to show as?" =
		[
		0: "Blue Portal"
		1: "Orange Portal"
		2: "Generic Portal"
		]


	// Inputs
	input SetName(string) : "Naming your portals is fun"
	input SetActivatedState(boolean) : "An inactive portal will not be drawn and will not teleport entites"
	input Fizzle(void) : "Makes a cool visual fizzle and properly shuts down the portal"
	input NewLocation(string) : "Sets this portals location and angles. This expects 6 floats with space delimiters, the format is 'x y z pitch yaw roll'"
	input Resize[P2](string) : "Resizes the portal. Format is 'halfwidth halfheight'"
	input SetLinkageGroupId[P2](integer) : "Sets the portal linkage ID.  If portal is open it will close and reopen with new portal linked."

	// Outputs
	output OnPlacedSuccessfully[!P2](void) : "When a portal is placed without failure, this output is fired."
	]
