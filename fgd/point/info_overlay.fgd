
@PointClass base(Targetname, Angles, Targetname) 
	appliesto(ASW, EP1, EP2, HL2, P2, TF2, CSGO) 
	size(-1 -1 0, 1 1 1) 
	color(80 150 225) 
	studio("models/editor/overlay_helper.mdl") 
	sphere(fademindist) 
	sphere(fademaxdist) 
	overlay() = info_overlay: "An entity that places an overlay on the world."
	[
	material(material) : "Material"
	sides(sidelist) : "Brush faces"
	sides[P2](sidelist) : "Brush faces" : : "The brush faces this overlay is applied to."
	renderorder(integer) : "Render Order" : 0 : "Higher values render after lower values. This value can be 0-3."
	startu(float) : "U Start" : 0.0
	startu[P2](float) : "U Start" : 0.0 : "A value between 0-1, defining the starting X axis position in the overlay material."
	endu(float) : "U End" : 1.0
	endu[P2](float) : "U End" : 1.0 : "A value between 0-1, defining the ending X axis position in the overlay material."
	startv(float) : "V Start" : 0.0
	startv[P2](float) : "V Start" : 0.0 : "A value between 0-1, defining the starting Y axis position in the overlay material."
	endv(float) : "V End" : 1.0
	endv[P2](float) : "V End" : 1.0 : "A value between 0-1, defining the ending Y axis position in the overlay material."
	basisorigin(vector) : "Overlay Basis Origin(Read-Only)"
	basisu(vector) : "Overlay Basis U(Read-Only)"
	basisv(vector) : "Overlay Basis V(Read-Only)"
	basisnormal(vector) : "Overlay Basis Normal(Read-Only)"
	uv0(vector) : "Overlay Point 1(Read-Only)"
	uv1(vector) : "Overlay Point 2(Read-Only)"
	uv2(vector) : "Overlay Point 3(Read-Only)"
	uv3(vector) : "Overlay Point 4(Read-Only)"
	fademindist(float) : "Start Fade Dist" : -1 : "Distance at which the overlay starts to fade (<0 = use fademaxdist)."
	fademaxdist(float) : "End Fade Dist" : 0 : "Maximum distance at which the overlay is visible (0 = don't fade out)."
	]
