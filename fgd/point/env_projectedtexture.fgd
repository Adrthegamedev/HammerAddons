
@PointClass base(Targetname, Parentname, Angles, SystemLevelChoice) 
	appliesto(ASW, EP1, EP2, HL2, P1, P2, TF2, CSGO) 
	size(-2 -2 -2, 2 2 2) 
	frustum(lightfov, nearz, farz, lightcolor, -1) 
	studio("models/editor/cone_helper.mdl") 
	line(255 255 255, targetname, target) 
	sphere(nearz) 
	sphere(farz) = env_projectedtexture: "Projected texture entity."
	[
	spawnflags(flags) : "spawnflags" =
		[
		1: "Enabled" : 1
		]

	spawnflags[ASW](flags) : "spawnflags" =
		[
		1: "Enabled" : 1
		2: "Always Update (moving light)" : 0
		]

	spawnflags[P2](flags) : "spawnflags" =
		[
		1: "Enabled" : 0
		2: "Always Update (moving light)" : 0
		]

	target(target_destination) : "target" : : "target"
	lightfov(float) : "FOV" : 90.0 : "FOV"
	nearz(float) : "NearZ" : 4.0 : "Near Z for projected texture"
	farz(float) : "FarZ" : 750.0 : "Far Z for projected texture"
	enableshadows(choices) : "Enable Shadows" : "0" : "Enables/disables shadows from this projected texture." =
		[
		0: "No"
		1: "Yes"
		]

	enableshadows[ASW](boolean) : "Enable Shadows" : 0 : "Enables/disables shadows from this projected texture."
	enableshadows[P2](boolean) : "Enable Shadows" : 1 : "Enables/disables shadows from this projected texture."
	shadowquality(choices) : "Shadow Quality" : "1" : "Quality of shadows." =
		[
		0: "Low"
		1: "High"
		]

	lightonlytarget(choices) : "Light Only Target" : "0" : "Limit flashlight effect to only effect target entity." =
		[
		0: "No"
		1: "Yes"
		]

	lightonlytarget[ASW](boolean) : "Light Only Target" : 0 : "Limit flashlight effect to only effect target entity."
	lightworld(choices) : "Light World" : "1" : "Control whether flashlight effects static world geometry." =
		[
		0: "No"
		1: "Yes"
		]

	lightworld[ASW](boolean) : "Light World" : 1 : "Control whether flashlight effects static world geometry."
	lightworld[P2](boolean) : "Light World" : 0 : "Control whether flashlight effects static world geometry."
	lightcolor(color255) : "Light Color" : "255 255 255 200" : "Light Color RGB-Intensity"
	cameraspace(integer) : "Camera Space" : 0 : "Angles are interpreted as being relative to camera."
	brightnessscale[!TF2, ASW](float) : "Brightness Scale" : 1.0 : "Scale the light color by this brightness"
	colortransitiontime[!TF2, ASW](float) : "Color Transition Time" : 0.5 : "Amount of time it takes for a color change to occur."
	texturename[!TF2, ASW](material) : "Texture Name" : "effects/flashlight001"
	texturename[!TF2, P2](material) : "Texture Name" : "effects/flashlight001" : "VTF Texture to 'project' onto the enviroment."
	style[!TF2, P2](choices) : "Appearance" : "0" =
		[
		0: "Normal"
		10: "Fluorescent flicker"
		2: "Slow, strong pulse"
		11: "Slow pulse, noblack"
		5: "Gentle pulse"
		1: "Flicker A"
		6: "Flicker B"
		3: "Candle A"
		7: "Candle B"
		8: "Candle C"
		4: "Fast strobe"
		9: "Slow strobe"
		]

	pattern[!TF2, P2](string) : "Custom Appearance" : : "Set a custom pattern of light brightness for this light. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
	simpleprojection[!TF2, P2](boolean) : "Simple Projection" : 0 : "Indicates if this is a simple, non-light casting texture projection"

	// Inputs
	input TurnOn(void) : "Turn on the texture"
	input TurnOff(void) : "Turn off the texture"
	input SetFOV[!P2](float) : "Set FOV"
	input AlwaysUpdateOn[!TF2, ASW](void) : "Turn on per frame updating (for moving lights)"
	input AlwaysUpdateOff[!TF2, ASW](void) : "Turn off per frame updating (for moving lights)"
	input SpotlightTexture[!TF2, ASW, !CSGO, !P2](string) : "Set the spotlight texture"
	input EnableShadows[!TF2, ASW](boolean) : "Set the if shadows are enabled"
	input LightColor[!TF2, ASW](color255) : "Change the light color/brightness"
	input FOV[!TF2, P2, !CSGO](float) : "Set FOV of projection."
	input SetLightStyle[!TF2, P2](integer) : "Change the lightstyle (see Appearance field for possible values)."
	input SetPattern[!TF2, P2](string) : "Set a custom pattern of light brightness for this light. Pattern format is a string of characters, where 'a' is total darkness, 'z' fully bright. i.e. 'aaggnnttzz' would be a steppy fade in from dark to light."
	input SetNearZ[!TF2, P2, !CSGO](float) : "Sets the near Z distance."
	input SetFarZ[!TF2, P2, !CSGO](float) : "Sets the far Z distance."
	]
