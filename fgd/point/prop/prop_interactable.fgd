@PointClass base(prop_dynamic_base) 
	appliesto(MBase)
	wirebox(use_mins, use_maxs)
	studioprop()
= prop_interactable:
	"A prop designed to be interacted with like a button. " +
	"It has all of the properties of prop_dynamic without having to use an accompanying func_door or func_button."
	[
	spawnflags(flags) =
		[
		512 : "+USE interactable" : 1
		1024 : "Touch interactable" : 0
		2048 : "Disable interaction commands when locked" : 0
		4096 : "Radius use" : 0
		]

	Locked(boolean) : "Start locked" : 0 : "If set, this prop_interactable will start locked, making it uninteractable."
	
	SetCooldown(float) : "Cooldown" : "1.0" : "The amount of time after this prop_interactable is used before it can be interacted with again. " +
		"This is always based on when the prop_interactable was pressed, disregarding any active In Sequence, " +
		"but an optional Out Sequence will play after the cooldown is over. " +
		"It is also used when the prop_interactable is locked."
	
	PressedSound(sound) : "Pressed Sound" : "" : "The sound to play when the button is successfully pressed."
	LockedSound(sound) : "Locked Sound" : "" : "The sound to play when the button is interacted with while locked."
	InSequence(string) : "In Sequence" : "" : "Optional sequence to play when the button is pressed, representing a button going 'in'."
	OutSequence(string) : "Out Sequence" : "" : "Optional sequence to play after the button was interacted with and the cooldown is finished, " +
		"representing a button coming back 'out' after an 'in' animation."
	LockedSequence(string) : "Locked Sequence" : "" : "Optional sequence to play when the prop_interactable is interacted with while locked."
		
	use_mins(vector) : "+USE Mins" : "-0 -0 -0" : "Optional box for only permitting +USE interactions within. The prop_interactable should not change its angles while this is used."
	use_maxs(vector) : "+USE Maxs" : "0 0 0" : "Optional box for only permitting +USE interactions within. The prop_interactable should not change its angles while this is used."
	

	// Inputs
	input Lock(void) : "Locks this prop_interactable, making it uninteractable."
	input Unlock(void) : "Unlocks this prop_interactable, making it interactable."
	input Press(void) : "Presses this prop_interactable as if someone interacted with it."
	
	input EnableUseInteraction(void) : "Enables use interaction if it was disabled before."
	input DisableUseInteraction(void) : "Disables use interaction if it was enabled before."
	input EnableTouchInteraction(void) : "Enables touch interaction if it was disabled before."
	input DisableTouchInteraction(void) : "Disables touch interaction if it was enabled before."
	input StartIgnoringCommandsWhenLocked(void) : "Starts ignoring commands when this prop_interactable is locked."
	input StopIgnoringCommandsWhenLocked(void) : "Stops ignoring commands when this prop_interactable is locked."
	input EnableRadiusInteract(void) : "Enables radius use."
	input DisableRadiusInteract(void) : "Disables radius use."

	// Outputs
	output OnPressed(void) : "Fired whenever the prop is interacted with."
	output OnLockedUse(void) : "Fired whenever the button is interacted with while locked."
	output OnIn(void) : "Fired whenever the prop completes its 'In' animation."
	output OnOut(void) : "Fired whenever the prop completes its 'Out' animation."
	]
