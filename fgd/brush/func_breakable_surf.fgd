
@SolidClass base(BreakableBrush, RenderFields, Shadow, Reflection) 
	appliesto(ASW, EP1, EP2, HL2, P2, TF2, CSGO) 
	quadbounds() = func_breakable_surf: "A breakable surface, for partially breakable glass / tile / etc.  All faces but the desired visible one must be marked as NODRAW and thatface must be 4 sided.  The material applied to the visible face must be set up to be breakable."
	[
	spawnflags(flags) : "spawnflags" =
		[
		1: "Physics damage decals" : 0
		2: "Take damage from held objects" : 0
		]

	health(integer) : "Health" : 5 : "The amount of damage the surface takes before breaking."
	fragility(integer) : "Fragility" : 100 : "If the 'Surface Type' is set to Glass, this value sets how fragile the glass pieces are after the surface has been broken."
	fragility[P2](integer) : "Fragility" : 100 : "If the 'Surface Type' is set to Glass, this value sets how fragile the glass pieces are after the surface has been broken. Lower values make glass pieces tend to stay more."
	surfacetype(choices) : "Surface Type" : "0" =
		[
		0: "Glass"
		1: "Tile"
		]

	surfacetype[P2](choices) : "Surface Type" : "0" : "Sets the behaviour of the brush. Glass shatters in multiple sizes, and easily breaks. Tile only breaks along edges, and is still strong after being shattered." =
		[
		0: "Glass"
		1: "Tile"
		]

	lowerleft[!CSGO, !TF2, P2](vecline) : "Lower Left Corner (readonly)" : : "This is set automatically by Hammer when saving."
	lowerright[!CSGO, !TF2, P2](vecline) : "Lower Right Corner (readonly)" : : "This is set automatically by Hammer when saving."
	upperleft[!CSGO, !TF2, P2](vecline) : "Upper Left Corner (readonly)" : : "This is set automatically by Hammer when saving."
	upperright[!CSGO, !TF2, P2](vecline) : "Upper Right Corner (readonly)" : : "This is set automatically by Hammer when saving."
	error[!CSGO, !TF2, P2](choices) : "Face Error" : "0" : "Set by Hammer to indicate an invalid glass/tile surface." =
		[
		0: "No Error"
		1: "Multiple Textured Faces"
		2: "Non-Square Face"
		]


	// Inputs
	input Shatter(vector) : "Shatter the window. Input a vector. First two coordinates are the X,Y center of the shattering (as values from from 0-1). The third coordinate is the radius of the shatter, in inches."
	input Shatter[P2](vector) : "Shatter the window. Input a vector. First two coordinates are the X,Y center of the shattering (as values from from 0-1). The third coordinate is the radius of the shatter, in units."
	]
